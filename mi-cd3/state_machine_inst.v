// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Sun Jul 07 16:46:53 2024

state_machine state_machine_inst
(
	.H(H_sig) ,	// input  H_sig
	.M(M_sig) ,	// input  M_sig
	.L(L_sig) ,	// input  L_sig
	.Bs(Bs_sig) ,	// input  Bs_sig
	.Vs(Vs_sig) ,	// input  Vs_sig
	.Ve(Ve_sig) ,	// input  Ve_sig
	.Al(Al_sig) ,	// input  Al_sig
	.E(E_sig) ,	// input  E_sig
	.working(working_sig) ,	// input  working_sig
	.clock(clock_sig) ,	// input  clock_sig
	.Ag(Ag_sig) ,	// output  Ag_sig
	.led(led_sig) 	// output  led_sig
);

defparam state_machine_inst.FILLING = 'b000;
defparam state_machine_inst.FULL_BOX = 'b001;
defparam state_machine_inst.SPRINKLER = 'b010;
defparam state_machine_inst.DRIP = 'b011;
defparam state_machine_inst.CLEANING = 'b100;
defparam state_machine_inst.ERROR = 'b101;
